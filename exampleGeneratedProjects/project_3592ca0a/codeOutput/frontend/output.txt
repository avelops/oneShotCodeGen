Here is the implementation for the **Frontend Components** and **UI Logic** for the To-Do application based on the provided requirements and technical specifications:

```json
{
    "folders": ["frontend/src/components", "frontend/src/api", "frontend/src/pages", "frontend/src/theme"],
    "files": {
        "frontend/src/index.js": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);",
        "frontend/src/theme/theme.js": "import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nexport default theme;",
        "frontend/src/App.js": "import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport TaskForm from './pages/TaskForm';\nimport CategoryManagement from './pages/CategoryManagement';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/tasks/new\" element={<TaskForm />} />\n        <Route path=\"/tasks/edit/:id\" element={<TaskForm />} />\n        <Route path=\"/categories\" element={<CategoryManagement />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;",
        "frontend/src/pages/Login.js": "import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api/api';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const response = await API.post('/auth/login', { email, password });\n      localStorage.setItem('token', response.data.token);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <Box sx={{ width: 300, margin: '100px auto', textAlign: 'center' }}>\n      <Typography variant=\"h5\">Login</Typography>\n      <TextField\n        label=\"Email\"\n        fullWidth\n        margin=\"normal\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        fullWidth\n        margin=\"normal\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>\n        Login\n      </Button>\n    </Box>\n  );\n}\n\nexport default Login;",
        "frontend/src/pages/Dashboard.js": "import React, { useEffect, useState } from 'react';\nimport { Button, Box, Typography, List, ListItem, ListItemText } from '@mui/material';\nimport API from '../api/api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Dashboard() {\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await API.get('/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  return (\n    <Box sx={{ padding: 2 }}>\n      <Typography variant=\"h4\">Dashboard</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/tasks/new')}>\n        Add Task\n      </Button>\n      <List>\n        {tasks.map((task) => (\n          <ListItem key={task.id} button onClick={() => navigate(`/tasks/edit/${task.id}`)}>\n            <ListItemText primary={task.title} secondary={`Priority: ${task.priority}`} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default Dashboard;",
        "frontend/src/pages/TaskForm.js": "import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box, MenuItem } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport API from '../api/api';\n\nfunction TaskForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [priority, setPriority] = useState('Medium');\n  const [status, setStatus] = useState('Pending');\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const response = await API.get('/categories');\n      setCategories(response.data);\n    };\n\n    const fetchTask = async () => {\n      if (id) {\n        const response = await API.get(`/tasks/${id}`);\n        const task = response.data;\n        setTitle(task.title);\n        setDescription(task.description);\n        setDueDate(task.dueDate);\n        setPriority(task.priority);\n        setStatus(task.status);\n        setCategoryId(task.categoryId);\n      }\n    };\n\n    fetchCategories();\n    fetchTask();\n  }, [id]);\n\n  const handleSubmit = async () => {\n    const taskData = { title, description, dueDate, priority, status, categoryId };\n    try {\n      if (id) {\n        await API.put(`/tasks/${id}`, taskData);\n      } else {\n        await API.post('/tasks', taskData);\n      }\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Failed to save task:', error);\n    }\n  };\n\n  return (\n    <Box sx={{ padding: 2 }}>\n      <TextField\n        label=\"Title\"\n        fullWidth\n        margin=\"normal\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <TextField\n        label=\"Description\"\n        fullWidth\n        margin=\"normal\"\n        multiline\n        rows={4}\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <TextField\n        label=\"Due Date\"\n        type=\"date\"\n        fullWidth\n        margin=\"normal\"\n        value={dueDate}\n        onChange={(e) => setDueDate(e.target.value)}\n        InputLabelProps={{ shrink: true }}\n      />\n      <TextField\n        label=\"Priority\"\n        select\n        fullWidth\n        margin=\"normal\"\n        value={priority}\n        onChange={(e) => setPriority(e.target.value)}\n      >\n        <MenuItem value=\"High\">High</MenuItem>\n        <MenuItem value=\"Medium\">Medium</MenuItem>\n        <MenuItem value=\"Low\">Low</MenuItem>\n      </TextField>\n      <TextField\n        label=\"Status\"\n        select\n        fullWidth\n        margin=\"normal\"\n        value={status}\n        onChange={(e) => setStatus(e.target.value)}\n      >\n        <MenuItem value=\"Pending\">Pending</MenuItem>\n        <MenuItem value=\"In Progress\">In Progress</MenuItem>\n        <MenuItem value=\"Completed\">Completed</MenuItem>\n      </TextField>\n      <TextField\n        label=\"Category\"\n        select\n        fullWidth\n        margin=\"normal\"\n        value={categoryId}\n        onChange={(e) => setCategoryId(e.target.value)}\n      >\n        {categories.map((category) => (\n          <MenuItem key={category.id} value={category.id}>\n            {category.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Save Task\n      </Button>\n    </Box>\n  );\n}\n\nexport default TaskForm;",
        "frontend/src/api/api.js": "import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://localhost:3000/api',\n});\n\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default API;"
    },
    "commands": [
        "npx create-react-app frontend",
        "cd frontend && npm install @mui/material @emotion/react @emotion/styled",
        "cd frontend && npm install @mui/icons-material",
        "cd frontend && npm install react-router-dom@6",
        "cd frontend && npm install axios"
    ]
}
```