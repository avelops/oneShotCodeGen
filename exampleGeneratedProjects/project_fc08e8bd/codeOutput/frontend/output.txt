```json
{
    "folders": ["frontend", "frontend/src/components", "frontend/src/pages", "frontend/src/utils", "frontend/src/types"],
    "files": {
        "frontend/src/index.js": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);",
        "frontend/src/index.css": "body {\n  margin: 0;\n  font-family: 'Roboto', sans-serif;\n}\n\n* {\n  box-sizing: border-box;\n}",
        "frontend/src/App.js": "import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport TaskList from './pages/TaskList';\nimport TaskForm from './pages/TaskForm';\nimport CategoryManager from './pages/CategoryManager';\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TaskList />} />\n      <Route path=\"/task/new\" element={<TaskForm />} />\n      <Route path=\"/task/edit/:id\" element={<TaskForm />} />\n      <Route path=\"/categories\" element={<CategoryManager />} />\n    </Routes>\n  );\n};\n\nexport default App;",
        "frontend/src/pages/TaskList.js": "import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Grid, TextField, Select, MenuItem, FormControl, InputLabel, Card, CardContent, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilters] = useState({ status: '', priority: '' });\n  const [search, setSearch] = useState('');\n  const navigate = useNavigate();\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/tasks', {\n        params: { status: filters.status, priority: filters.priority, search }\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [filters, search]);\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3000/api/tasks/${id}`);\n      fetchTasks();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2} style={{ marginBottom: '16px' }}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Search\"\n            variant=\"outlined\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <FormControl fullWidth>\n            <InputLabel>Status</InputLabel>\n            <Select\n              value={filters.status}\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              <MenuItem value=\"To Do\">To Do</MenuItem>\n              <MenuItem value=\"In Progress\">In Progress</MenuItem>\n              <MenuItem value=\"Completed\">Completed</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <FormControl fullWidth>\n            <InputLabel>Priority</InputLabel>\n            <Select\n              value={filters.priority}\n              onChange={(e) => setFilters({ ...filters, priority: e.target.value })}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              <MenuItem value=\"Low\">Low</MenuItem>\n              <MenuItem value=\"Medium\">Medium</MenuItem>\n              <MenuItem value=\"High\">High</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/task/new')}>\n        Add Task\n      </Button>\n      <Grid container spacing={2} style={{ marginTop: '16px' }}>\n        {tasks.map((task) => (\n          <Grid item xs={12} sm={6} md={4} key={task.id}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">{task.title}</Typography>\n                <Typography variant=\"body2\">{task.description}</Typography>\n                <Typography variant=\"body2\">Priority: {task.priority}</Typography>\n                <Typography variant=\"body2\">Status: {task.status}</Typography>\n                <Typography variant=\"body2\">Due Date: {task.dueDate}</Typography>\n                <Button onClick={() => navigate(`/task/edit/${task.id}`)}>Edit</Button>\n                <Button color=\"error\" onClick={() => handleDelete(task.id)}>Delete</Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default TaskList;",
        "frontend/src/pages/TaskForm.js": "import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Grid, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\n\nconst TaskForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: 'Low',\n    status: 'To Do',\n    categories: []\n  });\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`http://localhost:3000/api/tasks/${id}`).then((response) => {\n        setTask(response.data);\n      });\n    }\n  }, [id]);\n\n  const handleSubmit = async () => {\n    try {\n      if (id) {\n        await axios.put(`http://localhost:3000/api/tasks/${id}`, task);\n      } else {\n        await axios.post('http://localhost:3000/api/tasks', task);\n      }\n      navigate('/');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          label=\"Title\"\n          variant=\"outlined\"\n          value={task.title}\n          onChange={(e) => setTask({ ...task, title: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          label=\"Description\"\n          variant=\"outlined\"\n          multiline\n          rows={4}\n          value={task.description}\n          onChange={(e) => setTask({ ...task, description: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          type=\"date\"\n          label=\"Due Date\"\n          InputLabelProps={{ shrink: true }}\n          variant=\"outlined\"\n          value={task.dueDate}\n          onChange={(e) => setTask({ ...task, dueDate: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Priority</InputLabel>\n          <Select\n            value={task.priority}\n            onChange={(e) => setTask({ ...task, priority: e.target.value })}\n          >\n            <MenuItem value=\"Low\">Low</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"High\">High</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Status</InputLabel>\n          <Select\n            value={task.status}\n            onChange={(e) => setTask({ ...task, status: e.target.value })}\n          >\n            <MenuItem value=\"To Do\">To Do</MenuItem>\n            <MenuItem value=\"In Progress\">In Progress</MenuItem>\n            <MenuItem value=\"Completed\">Completed</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Save\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={() => navigate('/')}>Cancel</Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TaskForm;",
        "frontend/src/pages/CategoryManager.js": "import React, { useState, useEffect } from 'react';\nimport { TextField, Button, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport axios from 'axios';\n\nconst CategoryManager = () => {\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/categories');\n      setCategories(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const handleAddCategory = async () => {\n    try {\n      await axios.post('http://localhost:3000/api/categories', { name: newCategory });\n      setNewCategory('');\n      fetchCategories();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteCategory = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3000/api/categories/${id}`);\n      fetchCategories();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <TextField\n        fullWidth\n        label=\"New Category\"\n        variant=\"outlined\"\n        value={newCategory}\n        onChange={(e) => setNewCategory(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddCategory}>\n        Add Category\n      </Button>\n      <List>\n        {categories.map((category) => (\n          <ListItem key={category.id} secondaryAction={\n            <IconButton edge=\"end\" onClick={() => handleDeleteCategory(category.id)}>\n              <DeleteIcon />\n            </IconButton>\n          }>\n            <ListItemText primary={category.name} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default CategoryManager;"
    },
    "commands": [
        "npx create-react-app frontend",
        "cd frontend && npm install @mui/material @mui/icons-material @emotion/react @emotion/styled axios react-router-dom"
    ]
}
```